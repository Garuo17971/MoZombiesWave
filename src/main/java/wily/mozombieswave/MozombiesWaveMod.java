/*
 *    MCreator note:
 *
 *    If you lock base mod element files, you can edit this file and the proxy files
 *    and they won't get overwritten. If you change your mod package or modid, you
 *    need to apply these changes to this file MANUALLY.
 *
 *    Settings in @Mod annotation WON'T be changed in case of the base mod element
 *    files lock too, so you need to set them manually here in such case.
 *
 *    Keep the ElementsMozombiesWaveMod object in this class and all calls to this object
 *    INTACT in order to preserve functionality of mod elements generated by MCreator.
 *
 *    If you do not lock base mod element files in Workspace settings, this file
 *    will be REGENERATED on each build.
 *
 */
package wily.mozombieswave;

import net.minecraft.entity.Entity;
import net.minecraft.entity.EnumCreatureType;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundEvent;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.storage.loot.LootTableList;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLServerStartingEvent;
import net.minecraftforge.fml.common.eventhandler.EventPriority;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.registry.EntityRegistry;
import net.minecraftforge.fml.relauncher.Side;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import wily.mozombieswave.entity.*;
import wily.mozombieswave.init.ModObjects;

import java.util.ArrayList;
import java.util.Iterator;

import static wily.mozombieswave.init.ModObjects.HURT_SURVIVOR;
import static wily.mozombieswave.init.ModObjects.HURT_SURVIVOR_FEMALE;


@Mod(modid = MozombiesWaveMod.MODID, version = MozombiesWaveMod.VERSION)
public class MozombiesWaveMod {
	public static final String MODID = "mozombies_wave";
	public static final String VERSION = "0.1.5";
	public static final Logger LOGGER = LogManager.getLogger(MODID);
	@Mod.Instance(MODID)
	public static MozombiesWaveMod instance;
	@Mod.EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		MinecraftForge.EVENT_BUS.register(this);
		if (event.getSide() == Side.CLIENT){
			ClientEvents.registerEntityRender();
		}
	}

	@Mod.EventHandler
	public void init(FMLInitializationEvent event) {
		Biome hell = Biome.REGISTRY.getObject(new ResourceLocation("hell"));
		EntityRegistry.addSpawn(EntityNetherZombie.class, 7, 2, 6, EnumCreatureType.MONSTER, hell);
		Biome[] spawnBiomes = allbiomes(Biome.REGISTRY);
		for (Class<? extends EntityMoZombieBase> mo : ModObjects.commonZombies) {
			EntityRegistry.addSpawn(mo, 15, 1, 4, EnumCreatureType.MONSTER, spawnBiomes);
		}
		EntityRegistry.addSpawn(EntitySurvivor.class, 2, 1, 2, EnumCreatureType.MONSTER, spawnBiomes);
	}
	private Biome[] allbiomes(net.minecraft.util.registry.RegistryNamespaced<ResourceLocation, Biome> in) {
		Iterator<Biome> itr = in.iterator();
		ArrayList<Biome> ls = new ArrayList<Biome>();
		while (itr.hasNext())
			ls.add(itr.next());
		return ls.toArray(new Biome[ls.size()]);
	}

	@Mod.EventHandler
	public void postInit(FMLPostInitializationEvent event) {
		registerLootTables();
	}

	@Mod.EventHandler
	public void serverLoad(FMLServerStartingEvent event) {
	}

	@SubscribeEvent(priority = EventPriority.NORMAL, receiveCanceled = true)
	public void registerSoundEvents(RegistryEvent.Register<SoundEvent> event) {
		event.getRegistry().registerAll(HURT_SURVIVOR);
		event.getRegistry().registerAll(HURT_SURVIVOR_FEMALE);
	}
	public ResourceLocation getLootTablesResourceLocation(Class<? extends Entity> loot){
		return new ResourceLocation(MODID, "entities/" + EntityRegistry.getEntry(loot).getName());

	}
	public void registerLootTables(){
		LootTableList.register(getLootTablesResourceLocation(EntitySurvivor.class));
		LootTableList.register(getLootTablesResourceLocation(EntityDiscoZombie.class));
		LootTableList.register(getLootTablesResourceLocation(EntityZombieChef.class));
		LootTableList.register(getLootTablesResourceLocation(EntityZombieCyborg.class));
		LootTableList.register(getLootTablesResourceLocation(EntityZombieDwarf.class));
		LootTableList.register(getLootTablesResourceLocation(EntityZombieHerobrine.class));
		LootTableList.register(getLootTablesResourceLocation(EntityZombieNotch.class));
	}
}
